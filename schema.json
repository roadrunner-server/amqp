{
  "$id": "https://raw.githubusercontent.com/roadrunner-server/amqp/refs/heads/master/schema.json",
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "title": "roadrunner-amqp",
  "description": "The schema contains all the valid configuration parameters for the AMQP plugin for the roadrunner job system.",
  "definitions": {
    "pipeline": {
      "type": "object",
      "required": [
        "driver"
      ],
      "additionalProperties": false,
      "properties": {
        "driver": {
          "type": "string",
          "enum": [
            "amqp"
          ]
        },
        "config": {
          "type": "object",
          "additionalProperties": false,
          "description": "Configuration options for the AMQP pipeline.",
          "properties": {
            "priority": {
              "$ref": "https://raw.githubusercontent.com/roadrunner-server/jobs/refs/heads/master/schema.json#/definitions/PipelineProperties/priority"
            },
            "prefetch": {
              "$ref": "https://raw.githubusercontent.com/roadrunner-server/jobs/refs/heads/master/schema.json#/definitions/PipelineProperties/prefetch"
            },
            "delete_queue_on_stop": {
              "type": "boolean",
              "default": false,
              "description": "Whether to delete the queue when stopping the pipeline."
            },
            "queue": {
              "$ref": "https://raw.githubusercontent.com/roadrunner-server/jobs/refs/heads/master/schema.json#/definitions/PipelineProperties/queue"
            },
            "exchange": {
              "description": "The name of the exchange.",
              "type": "string",
              "default": "amqp.default"
            },
            "redial_timeout": {
              "description": "Redial timeout (in seconds). How long to try to reconnect to the AMQP server. Default or zero means 60.",
              "type": "integer",
              "default": 60
            },
            "exchange_durable": {
              "description": "Whether the exchange is durable. See https://www.rabbitmq.com/tutorials/amqp-concepts.html#exchanges",
              "type": "boolean",
              "default": false
            },
            "durable": {
              "type": "boolean",
              "default": false,
              "description": "Whether the queue is durable."
            },
            "consumer_id": {
              "description": "The unique identifier for the consumer amongst all consumers on this channel.",
              "type": "string",
              "default": "roadrunner-<uuid>"
            },
            "exchange_auto_delete": {
              "description": "Whether to auto-delete the exchange when the last queue is unbound from it. See https://www.rabbitmq.com/tutorials/amqp-concepts.html#exchanges",
              "type": "boolean",
              "default": false
            },
            "queue_auto_delete": {
              "description": "Whether to auto-delete queues that have had at least one consumer when the last consumer unsubscribes.",
              "type": "boolean",
              "default": false
            },
            "exchange_type": {
              "description": "The type of exchange.",
              "type": "string",
              "default": "direct"
            },
            "routing_key": {
              "description": "Routing key for the queue.",
              "type": "string"
            },
            "exclusive": {
              "description": "Declare a queue exclusive at the exchange.",
              "type": "boolean",
              "default": false
            },
            "multiple_ack": {
              "description": "When multiple ACK is enabled, this delivery and all prior unacknowledged deliveries on the same channel will be acknowledged. This is useful for batch processing of deliveries.",
              "type": "boolean",
              "default": false
            },
            "requeue_on_fail": {
              "description": "Whether to use RabbitMQ mechanisms to requeue the job on failure.",
              "type": "boolean",
              "default": false
            },
            "queue_headers": {
              "description": "Queue declare args.",
              "type": "object",
              "minProperties": 1,
              "additionalProperties": false,
              "patternProperties": {
                "^[a-zA-Z0-9._-]+$": {
                  "type": "string",
                  "minLength": 1
                }
              }
            }
          }
        }
      }
    },
    "driver": {
      "type": "object",
      "additionalProperties": false,
      "description": "Configuration options for the AMQP driver.",
      "properties": {
        "addr": {
          "title": "AMQP Server URI",
          "description": "AMQP URI to connect to the rabbitmq server. See https://www.rabbitmq.com/uri-spec.html",
          "type": "string",
          "default": "amqp://guest:guest@127.0.0.1:5672",
          "minLength": 1
        },
        "tls": {
          "title": "TLS Configuration",
          "type": "object",
          "description": "TLS configuration options for AMQP.",
          "properties": {
            "key": {
              "$ref": "https://raw.githubusercontent.com/roadrunner-server/http/refs/heads/master/schema.json#/$defs/SSL/properties/key"
            },
            "cert": {
              "$ref": "https://raw.githubusercontent.com/roadrunner-server/http/refs/heads/master/schema.json#/$defs/SSL/properties/cert"
            },
            "root_ca": {
              "$ref": "https://raw.githubusercontent.com/roadrunner-server/http/refs/heads/master/schema.json#/$defs/SSL/properties/root_ca"
            },
            "client_auth_type": {
              "$ref": "https://raw.githubusercontent.com/roadrunner-server/http/refs/heads/master/schema.json#/$defs/ClientAuthType"
            }
          },
          "required": [
            "key",
            "cert"
          ]
        }
      }
    }
  }
}
